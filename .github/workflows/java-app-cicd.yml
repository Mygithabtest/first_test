name: Build and Deploy Java App

on:
  push:
    branches:
      - main
      - github-pipeline

env:
  namespace: azuredeploytest
  helmChartPath: src/hello-java-chart
  releaseName: hello-java

jobs:
  build:
    name: Build Java Application
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set PATH for Java & Maven
        run: |
          echo "C:\Program Files\Java\jdk-21.0.7\bin" >> $GITHUB_PATH
          echo "C:\Program Files\Apache\apache-maven-3.9.9\bin" >> $GITHUB_PATH

      - name: Build Java with Maven
        run: mvn package --file pom.xml

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: target/*.jar

  deploy:
    name: Deploy to Kubernetes
    runs-on: windows-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: java-app
          path: deployment-artifacts

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: latest

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: latest

      - name: Download kubeconfig from secrets
        run: echo "${{ secrets.KUBECONFIG_CONTENT }}" | Out-File -FilePath kubeconfig.yaml -Encoding utf8

      - name: Test Kubernetes Connectivity
        continue-on-error: true
        run: |
          kubectl --kubeconfig="kubeconfig.yaml" cluster-info
          kubectl --kubeconfig="kubeconfig.yaml" get namespaces

      - name: Deploy with Helm
        run: |
          helm upgrade --install ${{ env.releaseName }} ./src/hello-java-chart `
            --namespace ${{ env.namespace }} `
            --create-namespace `
            --values ./src/hello-java-chart/values/dev.yaml `
            --set image.repository=bitnami/nginx,image.tag=latest,ingress.hostname=${{ env.releaseName }}.${{ env.namespace }}.dev.oclc.org `
            --wait --timeout 5m `
            --kubeconfig kubeconfig.yaml `
            --debug

      - name: Print Deployment Info
        run: echo "Application deployed to: https://${{ env.releaseName }}.${{ env.namespace }}.dev.oclc.org"
