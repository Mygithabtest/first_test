# azure-pipelines.yml
trigger:
  - main

variables:
  dockerRegistry: 'artifact-m1.shr.oclc.org'
  dockerRepository: 'your-project/hello-java'
  namespace: 'azuredeploytest'
  helmChartPath: '$(System.DefaultWorkingDirectory)/hello-java-chart'
  releaseName: 'hello-java'

stages:
  - stage: Build
    displayName: 'Build and Push Image'
    jobs:
      - job: BuildImage
        displayName: 'Build and Push Docker Image'
        pool:
          name: 'YourSelfHostedAgentPool'
        steps:
          - task: Maven@3
            displayName: 'Build Java Application'
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'package'
              options: '-e' # Enable debug output for Maven
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '11'

          - task: Docker@2
            displayName: 'Build and Push Docker Image'
            inputs:
              containerRegistry: 'YourDockerRegistry'
              repository: '$(dockerRepository)'
              command: 'buildAndPush'
              Dockerfile: 'Dockerfile'
              buildContext: '$(System.DefaultWorkingDirectory)'
              tags: |
                $(Build.BuildId)
                latest

  - stage: Deploy
    displayName: 'Deploy to Kubernetes'
    dependsOn: Build
    jobs:
      - job: DeployToK8s
        displayName: 'Deploy to Kubernetes Cluster'
        pool:
          name: 'YourSelfHostedAgentPool'
        # Remove any job-level dependencies
        # dependsOn: [] - Remove this line if it exists
        steps:
          - task: HelmDeploy@0
            displayName: 'Deploy Helm Chart'
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: 'K8s-AzureDeployTest'
              namespace: '$(namespace)'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(helmChartPath)'
              releaseName: '$(releaseName)'
              valueFile: '$(helmChartPath)/values/dev.yaml'
              overrideValues: |
                image.repository=$(dockerRegistry)/$(dockerRepository)
                imageTag=$(Build.BuildId)
                ingress.hostname=$(releaseName).$(namespace).dev.oclc.org
                xlrelease_url=$(Build.BuildUri)
                technical_lead=$(Build.RequestedFor)
              waitForExecution: true
              arguments: '--timeout 5m'

          - script: |
              echo "Application deployed to: https://$(releaseName).$(namespace).dev.oclc.org"
              echo "Image tag: $(Build.BuildId)"
            displayName: 'Print Deployment Info'