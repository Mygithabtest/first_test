# azure-pipelines.yml
trigger:
  - main

variables:
  namespace: 'azuredeploytest'
  helmChartPath: '$(System.DefaultWorkingDirectory)/hello-java-chart'
  releaseName: 'hello-java'

stages:
  - stage: Build
    displayName: 'Build Java Application'
    jobs:
      - job: BuildApp
        displayName: 'Build Java Application'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              ls -la
              echo "Checking if pom.xml exists:"
              if [ -f "pom.xml" ]; then echo "pom.xml found"; else echo "pom.xml NOT found"; fi
              echo "Maven version:"
              mvn --version
              echo "Starting Maven build with debug:"
              mvn -X clean package
            displayName: 'Build with Maven (Debug Mode)'

          - task: CopyFiles@2
            displayName: 'Copy JAR to staging directory'
            condition: succeeded()
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)/target'
              Contents: '*.jar'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish JAR Artifact'
            condition: succeeded()
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'java-app'
              publishLocation: 'Container'

  - stage: Deploy
    displayName: 'Deploy to Kubernetes'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: DeployToK8s
        displayName: 'Deploy to Kubernetes Cluster'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'java-app'
              downloadPath: '$(System.ArtifactsDirectory)'
            continueOnError: true

          - task: HelmDeploy@0
            displayName: 'Deploy Helm Chart'
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: 'K8s-AzureDeployTest'
              namespace: '$(namespace)'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(helmChartPath)'
              releaseName: '$(releaseName)'
              valueFile: '$(helmChartPath)/values/dev.yaml'
              overrideValues: |
                image.repository=nginx
                image.tag=latest
                ingress.hostname=$(releaseName).$(namespace).dev.oclc.org
              waitForExecution: true
              arguments: '--timeout 5m'

          - script: |
              echo "Application deployed to: https://$(releaseName).$(namespace).dev.oclc.org"
            displayName: 'Print Deployment Info'