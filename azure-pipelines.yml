# azure-pipelines.yml
trigger:
  - main

variables:
  namespace: 'azuredeploytest'
  helmChartPath: '$(System.DefaultWorkingDirectory)/hello-java-chart'
  releaseName: 'hello-java'

stages:
  - stage: Build
    displayName: 'Build Java Application'
    jobs:
      - job: BuildApp
        displayName: 'Build Java Application'
        pool:
          name: 'Windows'
        steps:
          - task: CmdLine@2
            displayName: 'Fix PATH for System Tools'
            inputs:
              script: |
                @echo Setting up System PATH...
                set PATH=C:\Windows\System32;C:\Windows;C:\Windows\System32\WindowsPowerShell\v1.0;C:\Windows\System32\wbem;C:\Program Files\Java\jdk-21.0.7\bin;C:\Program Files\Apache\apache-maven-3.9.9\bin;%PATH%
                @echo PATH is now: %PATH%

          - task: Maven@3
            displayName: 'Build Java Application'
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'package'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              javaHomeOption: 'Path'
              jdkDirectory: 'C:\Program Files\Java\jdk-21.0.7'
              mavenVersionOption: 'Path'
              mavenPath: 'C:\Program Files\Apache\apache-maven-3.9.9'
              mavenSetM2Home: true

          - task: CopyFiles@2
            displayName: 'Copy JAR to staging directory'
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)/target'
              Contents: '*.jar'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish JAR Artifact'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'java-app'
              publishLocation: 'Container'

  - stage: Deploy
    displayName: 'Deploy to Kubernetes'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: DeployToK8s
        displayName: 'Deploy to Kubernetes Cluster'
        pool:
          name: 'Windows'
        steps:
          - task: CmdLine@2
            displayName: 'Fix PATH for System Tools'
            inputs:
              script: |
                @echo Setting up System PATH...
                set PATH=C:\Windows\System32;C:\Windows;C:\Windows\System32\WindowsPowerShell\v1.0;C:\Windows\System32\wbem;%PATH%

          - task: KubectlInstaller@0
            displayName: 'Install Kubectl'
            inputs:
              kubectlVersion: 'latest'

          - task: HelmInstaller@1
            displayName: 'Install Helm'
            inputs:
              helmVersionToInstall: 'latest'

          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'java-app'
              downloadPath: '$(System.ArtifactsDirectory)'

          # Download the kubeconfig file
          - task: DownloadSecureFile@1
            name: kubeconfig
            displayName: 'Download kubeconfig file'
            inputs:
              secureFile: 'k8s-devlab.yaml'

          # Create a modified kubeconfig with insecure-skip-tls-verify: true
          - task: PowerShell@2
            displayName: 'Create modified kubeconfig with insecure-skip-tls-verify'
            inputs:
              targetType: 'inline'
              script: |
                $kubeconfigContent = Get-Content -Path "$(kubeconfig.secureFilePath)" -Raw
                
                # Check if the file uses YAML 
                if ($kubeconfigContent -match "apiVersion: v1") {
                  Write-Host "Modifying YAML kubeconfig..."
                
                  # Replace or add insecure-skip-tls-verify setting
                  if ($kubeconfigContent -match "insecure-skip-tls-verify:") {
                    $kubeconfigContent = $kubeconfigContent -replace "insecure-skip-tls-verify: false", "insecure-skip-tls-verify: true"
                  } else {
                    # Find the clusters section and add the setting
                    $kubeconfigContent = $kubeconfigContent -replace "(\s+cluster:.*?)((\r?\n\s+[^\s])|$)", "$1`n    insecure-skip-tls-verify: true$2"
                  }
                
                  # Save the modified content
                  $kubeconfigContent | Out-File -FilePath "$(Agent.TempDirectory)/modified-kubeconfig.yaml" -Encoding utf8
                  Write-Host "Modified kubeconfig saved to $(Agent.TempDirectory)/modified-kubeconfig.yaml"
                  Write-Host "Modified content preview:"
                  Get-Content "$(Agent.TempDirectory)/modified-kubeconfig.yaml" | Select-Object -First 30
                } else {
                  Write-Error "Unsupported kubeconfig format"
                }

          # Deploy using the modified kubeconfig
          - task: CmdLine@2
            displayName: 'Deploy Helm Chart with modified kubeconfig'
            inputs:
              script: |
                @echo Using modified kubeconfig for Helm deployment...
                @echo Kubeconfig path: $(Agent.TempDirectory)\modified-kubeconfig.yaml
                
                @echo Running Helm upgrade command...
                helm upgrade --install $(releaseName) $(helmChartPath) ^
                  --namespace $(namespace) ^
                  --values $(helmChartPath)/values/dev.yaml ^
                  --set image.repository=nginx,image.tag=latest,ingress.hostname=$(releaseName).$(namespace).dev.oclc.org ^
                  --wait --timeout 5m ^
                  --kubeconfig $(Agent.TempDirectory)\modified-kubeconfig.yaml
                
                @echo Helm deployment completed.

          - task: CmdLine@2
            displayName: 'Print Deployment Info'
            inputs:
              script: |
                @echo Application deployed to: https://$(releaseName).$(namespace).dev.oclc.org